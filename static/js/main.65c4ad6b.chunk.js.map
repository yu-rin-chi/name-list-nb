{"version":3,"sources":["Title.js","AddTodo.js","Footer.js","TaskList.js","App.js","index.js"],"names":["Title","react_default","a","createElement","Component","AddTodo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inputText","event","value","target","setState","trim","length","props","onAdd","_this2","type","onChange","onChangeText","onClick","onClickAdd","Footer","onChangeFilter","checked","filterType","onChangeFilterType","TaskList","nodes","tasks","filter","item","completed","map","node","label","key","id","onChangeItem","App","concat","push","Date","now","src_Title","src_AddTodo","onTaskAdd","src_TaskList","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.65c4ad6b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nclass Title extends Component {\n  render() {\n    return <h1>Todo App</h1>;\n  }\n}\nexport default Title;\n","import React, {Component} from \"react\";\n\nclass AddTodo extends Component {\n  constructor(){\n    super()\n    this.state = {\n      inputText: \"\",\n    }\n  }\n  onChangeText(event) {\n    const value = event.target.value;\n    this.setState({\n      inputText: value\n    });\n  }\n  onClickAdd() {\n    const value = this.state.inputText;\n\n    if (value.trim().length === 0) {\n      return;\n    }\n    \n    this.setState({\n      inputText: \"\"\n    });\n\n    // 親に通知\n    this.props.onAdd(value.trim());\n  }\n  render(){\n    return <div>\n      <input\n        type=\"text\"\n        value={this.state.inputText}\n        onChange={event => this.onChangeText(event)}\n      />\n      <button onClick={event => this.onClickAdd()}>追加</button>\n    </div>\n  }\n}\nexport default AddTodo;","import React, {Component} from \"react\";\n\nclass Footer extends Component {\n  constructor(){\n    super();  \n  }\n  onChangeFilterType(event) {\n    this.props.onChangeFilter(event.target.value);\n  }\n  render (){\n    return (\n      <div>\n        <label>\n          <input type=\"radio\" value=\"all\"\n            checked={this.props.filterType === \"all\"}\n            onChange={(event) => this.onChangeFilterType(event)}\n          />\n          すべて\n        </label>\n        <label>\n          <input type=\"radio\" value=\"active\"\n            checked={this.props.filterType === \"active\"}\n            onChange={(event) => this.onChangeFilterType(event)}\n          />\n          未完了のみ\n        </label>\n        <label>\n          <input type=\"radio\" value=\"completed\"\n            checked={this.props.filterType === \"completed\"}\n            onChange={(event) => this.onChangeFilterType(event)}\n          />\n          完了のみ\n        </label>\n      </div>\n    )\n  }\n\n\n}\nexport default Footer;","import React, {Component} from \"react\";\n\nclass TaskList extends Component {\n  render(){\n    // タスクの配列を、フィルタリングして、新しい配列にする\n    const displayTasks = this.props.tasks.filter(item => {\n      switch(this.props.filterType){\n        case \"completed\":\n          return item.completed === true;\n        case \"active\":\n          return item.completed === false;\n        case \"all\":\n        default:\n          return true;\n      }\n    });\n\n    // タスクの配列を、DOMに変換するコード\n    const nodes = displayTasks.map(item => {\n      const node = item.completed === true \n          ? <del>{item.label}</del>\n          : <span>{item.label}</span>;\n\n      return (\n        <li key={item.id}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={item.completed}\n              onChange={event => this.props.onChangeItem(item.id)}\n            />\n            {node}\n          </label>\n        </li>\n      );\n    });\n    return (\n      <ul>{nodes}</ul>\n    )\n  }\n}\nexport default TaskList;","import React, { Component } from \"react\";\nimport Title from \"./Title.js\";\nimport AddTodo from \"./AddTodo\";\nimport Footer from \"./Footer\";\nimport TaskList from \"./TaskList\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n      filterType: \"all\"\n    };\n  }\n\n  onTaskAdd(label) {\n    // タスクの一覧を取得\n    const tasks = this.state.tasks.concat();\n    // 配列の最後に新しいタスクを追加\n    tasks.push({\n      id: Date.now(),\n      label: label,\n      completed: false\n    });\n    // ステートに記録\n    this.setState({\n      tasks: tasks\n    });\n  }\n  onChangeItem(id) {\n    const tasks = this.state.tasks.map(item => {\n      if (item.id === id) {\n        item.completed = !item.completed;\n      }\n      return item;\n    });\n    this.setState({\n      tasks: tasks\n    });\n  }\n  onChangeFilterType(value) {\n    this.setState({\n      filterType: value\n    });\n  }\n  render() {\n    // App.js\n    return (\n      <div>\n        <Title />\n        <AddTodo onAdd={label => this.onTaskAdd(label)} />\n        <TaskList\n          tasks={this.state.tasks}\n          filterType={this.state.filterType}\n          onChangeItem={id => this.onChangeItem(id)}\n        />\n        <Footer\n          filterType={this.state.filterType}\n          onChangeFilter={value => this.onChangeFilterType(value)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}